<template>
  <view
    class="indicator-container"
    :style="{ backgroundColor: backgroundColor }"
  >
    <view
      class="item"
      v-for="(item, index) in items"
      :key="index"
      :class="{ active: isActivate(index) }"
      @click="onItemClick(index)"
    >
      <text class="label">{{ item.label }}</text>
      <view class="item-line"></view>
    </view>
  </view>
</template>

<script>
export default {
  props: {
    backgroundColor: {
      type: String,
      default: "#f6f8fb",
    },
    items: {
      type: Array,
    },
    currentIndex: {
      type: Number,
      required: true,
      default: 0,
    },
  },
  data() {
    return {
		
		};
  },

  methods: {
    isActivate(index) {
      return index === this.currentIndex;
    },
    onItemClick(index) {
      if (this.isActivate(index)) {
        return;
      }
      this.$emit("indicator-click", index);
			// #ifdef APP-NVUE
			uni.$emit("indicatorclick", index)
			// #endif
    },
  },
};
</script>
<style lang="less" scoped>
.indicator-container {
  display: flex;
  width: 750rpx;
  height: 80rpx;
  flex-direction: row;
  background-color: #f6f8fb;

  .item {
    margin-top: 10rpx;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex: 1;

    .label {
      font-weight: 400;
      line-height: 24px;
      height: 24px;
      color: #333333;
      font-size: 26rpx;
    }

    .item-line {
      margin-top: 6rpx;
      width: 70rpx;
      height: 4rpx;
      background-color: transparent;
    }
  }

  .item.active {
    .label {
      color: red;
      font-size: 30rpx;
      font-weight: 700;
    }

    .item-line {
      background-color: red;
    }
  }
}
</style>
