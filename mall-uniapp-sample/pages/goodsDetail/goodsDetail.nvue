<template>
	<view class="goods" ref="goods">
		<goods-indicator class="indicator" ref="indicator" :style="{ opacity: indicatorOapcity }"></goods-indicator>
		<view class="content">
		<goods-slider :banners="goodsSliderBanner"></goods-slider>
			<goods-activity :activity="goodsActivityInfo"></goods-activity> 
			<goods-vip :vip="goodsVip"></goods-vip>
    <goods-intro-area :intro="goodsIntro"></goods-intro-area>
      <goods-resource-banner></goods-resource-banner>
    <goods-user-review></goods-user-review> 
	
    <goods-recommend></goods-recommend>
	
     <goods-detail-area
		 ref="goodsDetailArea"
        v-if="detailHtmlLoaded"
        :detailHtml="detailHtml"
      ></goods-detail-area> 
		</view>
		<goods-bottom-option class="bottom-option"></goods-bottom-option>
	</view>
</template>

<script lang="js">
	import * as detailHttp from "../../network/goodsDetail.js";
	import GoodsIndicator from "../../components/goodsDetail/GoodsIndicator.nvue";
	import GoodsSlider from "../../components/goodsDetail/GoodsSlider.nvue";
	import GoodsActivity from "../../components/goodsDetail/GoodsActivity.nvue";
	import GoodsVip from "../../components/goodsDetail/GoodsVip.nvue";
	import GoodsIntroArea from "../../components/goodsDetail/GoodsIntroArea.nvue";
	import GoodsResourceBanner from "../../components/goodsDetail/GoodsResourceBanner.nvue";
	import GoodsUserReview from "../../components/goodsDetail/GoodsUserReview.nvue";
	import GoodsRecommend from "../../components/goodsDetail/GoodsRecommend.nvue";
	import GoodsDetailArea from "../../components/goodsDetail/GoodsDetailArea.nvue";
	import GoodsBottomOption from "../../components/goodsDetail/GoodsBottomOption.vue";


	export default {
		components: {
			GoodsIndicator,
			// ScrollView,
			GoodsSlider,
			GoodsActivity,
			GoodsVip,
			GoodsIntroArea,
			GoodsResourceBanner,
			GoodsUserReview,
			GoodsRecommend,
			GoodsDetailArea,
			GoodsBottomOption,
		},
		onLoad(option) {
			this.id = option.goodsId ? option.goodsId : 20217
			uni.$on("goods-indicator-click", ({
				label,
				index
			}) => {
				console.log(`goods-indicator-click:${label} ${index}`)
			})
		},
		onUnload() {
			uni.$off("goods-indicator-click")
		},

		data() {

			return {
				goodsInfo: {},
				id: 20217,
				indicatorOapcity: 0.1,
				detailHtml: "",
				detailHtmlLoaded: false,
			};
		},

		methods: {
			loadGoodsDetail() {
				detailHttp
					.getGoodsDetail(this.id)
					.then((res) => {
						this.goodsInfo = res;
						console.log(this.goodsInfo);
					})
					.catch((err) => console.log(err));
				// .then()
				setTimeout(() => {
					detailHttp
						.getGoodsRichText(111)
						.then((richText) => {
							this.detailHtml = richText.data;
							this.detailHtmlLoaded = true;
						})
						.catch((err) => console.log(err));
				}, 200);
			},

			// onContentScroll() {
			//   let scrollTop = this.$refs.goods.scrollTop;
			//   let opacity = (scrollTop / 200).toFixed(1);

			//   opacity = opacity > 1 ? 1 : opacity;
			//   if (opacity != this.indicatorOapcity) {
			//     this.indicatorOapcity = opacity;
			//   }
			// },
		},
		computed: {
			goodsName() {
				// console.log(this.goodsInfo.name);
				return this.goodsInfo.name;
			},
			goodsSliderBanner() {
				var name = this.goodsInfo.name;
				if (this.goodsInfo.pictures) {
					return this.goodsInfo.pictures.map((pic) => ({
						image: pic,
						title: name,
					}));
				}
				return [];
			},
			goodsActivityInfo() {
				if (this.goodsInfo.activityId) {
					return {
						goodsId: this.goodsInfo.goodsId,
						v: this.goodsInfo.v,
						activityId: this.goodsInfo.activityId,
						activityBuyLimit: this.goodsInfo.activityBuyLimit,
						systemTime: this.goodsInfo.systemTime,
						activityFreeShipping: this.goodsInfo.activityFreeShipping,
						activityLabel: this.goodsInfo.activityLabel,
						activityStatus: this.goodsInfo.activityStatus,
						activityStartTime: this.goodsInfo.activityStartTime,
						activityEndTime: this.goodsInfo.activityEndTime,
						sellPrice: this.goodsInfo.sellPrice,
						originSellPrice: this.goodsInfo.priceMap.originSellPrice,
					};
				}
				return {};
			},
			goodsVip() {
				if (this.goodsInfo.id) {
					return {
						sellPrice: this.goodsInfo.sellPrice,
						memberPrice: this.goodsInfo.priceMap.memberPrice,
						discount: {
							forMember: 1400,
							forFirstOrder: 3000,
						},
						memberRightsUrl: "https://www.baidu.com",
					};
				}
				return {};
			},
			goodsIntro() {
				if (this.goodsInfo.id) {
					return {
						name: this.goodsInfo.name,
						subName: this.goodsInfo.subName,
						sales: this.goodsInfo.sales,
						labels: this.goodsInfo.labels,
						goodsTags: this.goodsInfo.goodsTags,
					};
				}
				return {};
			},
		},

		created() {
			console.log("goods.vue created");
			this.loadGoodsDetail();

		},
		updated() {
			console.log("goods.vue updated");
		},
		mounted() {
			// window.vue = this;
			console.log("goods.vue mounted");
			// this.$refs.goods.addEventListener("scroll", this.onContentScroll, true);
		},
		unmounted() {
			console.log("goods.vue unmounted");
			// this.$refs.goods.removeEventListener("scroll", this.onContentScroll);
		},
	};
</script>
<style lang="less" scoped>
	.goods {
		display: flex;
		flex-direction: column;
		width: 750rpx;
		background-color: #fff;

	/* #ifndef APP-PLUS-NVUE */
		.indicator {
			z-index: 9;
			position: fixed;
		}
			
		/* #endif*/
		/* #ifdef APP-PLUS-NVUE */
		.indicator {
			position: sticky;
		}
		.content{
			margin-top: -80rpx;
		}
		/* #endif*/

		.goodsInfo {
			word-break: break-all;
			width: 750rpx;
		}

		.bottom-option {
			position: fixed;
			bottom: -1rpx;
			  z-index: 99;
		}
	}

	.goods::-webkit-scrollbar {
		display: none;
	}
</style>
